diff --git a/.github/workflows/create_studio_project.yml b/.github/workflows/create_studio_project.yml
index 61b7cdd..5ebf88a 100644
--- a/.github/workflows/create_studio_project.yml
+++ b/.github/workflows/create_studio_project.yml
@@ -2,7 +2,7 @@ name: Setup Studio Account
 
 on:
   workflow_run:
-    workflows: ["Initial Setup"]
+    workflows: ['Initial Setup']
     types:
       - completed
 
@@ -31,15 +31,15 @@ jobs:
         run: echo "PQ_ID=$(cat pq.json | jq .data.graph.createPersistedQueryList.persistedQueryList.id)" >> $GITHUB_ENV
 
       - name: Install Rover
-        run: | 
-          curl -sSL https://rover.apollo.dev/nix/v0.19.0 | sh
+        run: |
+          curl -sSL https://rover.apollo.dev/nix/v0.27.0-preview.0 | sh
           echo "$HOME/.rover/bin" >> $GITHUB_PATH
 
       - name: Checkout
         uses: actions/checkout@v3
 
-      - name: Publish PQ List          
-        run: | 
+      - name: Publish PQ List
+        run: |
           rover persisted-queries publish --graph-id ${{vars.ACTOR}}${{env.GEN}} --list-id ${{env.PQ_ID}} \
             --manifest ./final/workshop-pq-manifest.json
 
@@ -51,13 +51,13 @@ jobs:
   install-url:
     needs: deploy
     runs-on: ubuntu-latest
-    steps: 
-      - id: "auth"
-        uses: "google-github-actions/auth@v0"
+    steps:
+      - id: 'auth'
+        uses: 'google-github-actions/auth@v0'
         with:
           credentials_json: ${{ secrets.GCP_CREDENTIALS }}
       - name: Get URL
-        run: | 
+        run: |
           gcloud run services describe ${{vars.ACTOR}}-router --region us-central1 --format 'value(status.url)' > url.json
           echo "URL=$(cat url.json)" >> $GITHUB_ENV
       - name: Set URL
@@ -75,7 +75,7 @@ jobs:
             --header 'X-API-Key: ${{ secrets.APOLLO_USER_KEY }}' \
             --url 'https://graphql.api.apollographql.com/api/graphql' \
             --data '{"query":"mutation Mutation($graphId: ID!, $name: String!, $subscriptionUrl: String) {\n  graph(id: $graphId) {\n    variant(name: $name) {\n      updateSubscriptionURL(subscriptionUrl: $subscriptionUrl) {\n        createdAt\n      }\n    }\n  }\n}","variables":{"graphId":"${{vars.ACTOR}}${{ env.GEN }}","name":"current","subscriptionUrl":"${{ env.URL }}"}}'
-  
+
   preflightScript:
     needs: publish
     runs-on: ubuntu-latest
diff --git a/.github/workflows/publish-subgraph.yml b/.github/workflows/publish-subgraph.yml
index 042b605..ab6b6fe 100644
--- a/.github/workflows/publish-subgraph.yml
+++ b/.github/workflows/publish-subgraph.yml
@@ -7,38 +7,38 @@ on:
 env:
   GEN: ${{ secrets.GEN || 'ws1' }}
   APOLLO_KEY: ${{ vars.TOKEN }}
-  
+
 jobs:
   publish:
     runs-on: ubuntu-latest
 
     steps:
-    - name: Checkout
-      uses: actions/checkout@v3
-
-    - name: Install Rover
-      run: | 
-        curl -sSL https://rover.apollo.dev/nix/v0.19.0 | sh
-        echo "$HOME/.rover/bin" >> $GITHUB_PATH
-
-    - name: Rover Subgraph Publish Products
-      run: | 
-        rover subgraph publish ${{vars.ACTOR}}${{ env.GEN }}@current \
-          --name products \
-          --convert \
-          --routing-url https://subgraph-products-j3nprurqka-ue.a.run.app \
-          --schema ./products-schema.graphql
-
-    - name: Rover Subgraph Publish Orders
-      run: | 
-        rover subgraph publish ${{vars.ACTOR}}${{ env.GEN }}@current \
-          --name orders \
-          --routing-url https://subgraph-orders-j3nprurqka-ue.a.run.app \
-          --schema ./orders-schema.graphql
-
-    - name: Rover Subgraph Publish Customers
-      run: |
-        rover subgraph publish ${{vars.ACTOR}}${{ env.GEN }}@current \
-          --name customers \
-          --routing-url https://subgraph-customers-j3nprurqka-ue.a.run.app \
-          --schema ./customers-schema.graphql
+      - name: Checkout
+        uses: actions/checkout@v3
+
+      - name: Install Rover
+        run: |
+          curl -sSL https://rover.apollo.dev/nix/v0.27.0-preview.0 | sh
+          echo "$HOME/.rover/bin" >> $GITHUB_PATH
+
+      - name: Rover Subgraph Publish Products
+        run: |
+          rover subgraph publish ${{vars.ACTOR}}${{ env.GEN }}@current \
+            --name products \
+            --convert \
+            --routing-url https://subgraph-products-j3nprurqka-ue.a.run.app \
+            --schema ./products-schema.graphql
+
+      - name: Rover Subgraph Publish Orders
+        run: |
+          rover subgraph publish ${{vars.ACTOR}}${{ env.GEN }}@current \
+            --name orders \
+            --routing-url https://subgraph-orders-j3nprurqka-ue.a.run.app \
+            --schema ./orders-schema.graphql
+
+      - name: Rover Subgraph Publish Customers
+        run: |
+          rover subgraph publish ${{vars.ACTOR}}${{ env.GEN }}@current \
+            --name customers \
+            --routing-url https://subgraph-customers-j3nprurqka-ue.a.run.app \
+            --schema ./customers-schema.graphql
diff --git a/.github/workflows/setup.yml b/.github/workflows/setup.yml
index d196f96..6025bbd 100644
--- a/.github/workflows/setup.yml
+++ b/.github/workflows/setup.yml
@@ -1,4 +1,3 @@
-
 name: Initial Setup
 
 on:
@@ -8,76 +7,76 @@ on:
 
 env:
   GEN: ${{ secrets.GEN || 'ws1' }}
-  FED_PIPELINE: 'FED_2_8'
+  FED_PIPELINE: 'FED_NEXT'
 
 jobs:
   create:
     runs-on: ubuntu-latest
     steps:
-    - id: string
-      uses: ASzc/change-string-case-action@v5
-      with:
-        string: gh-${{github.actor}}
-    - id: step2
-      run: echo "ACTOR=${{ steps.string.outputs.lowercase }}" | cut -c -23 >> $GITHUB_ENV
-    - name : lowercase github actor
-      run: | 
-        curl -L \
-          -X POST \
-          -H "Accept: application/vnd.github+json" \
-          -H "Authorization: Bearer ${{ secrets.GH_KEY }}" \
-          -H "X-GitHub-Api-Version: 2022-11-28" \
-          https://api.github.com/repos/${{github.repository}}/actions/variables \
-          -d '{"name":"actor","value":"${{ env.ACTOR }}" }'
-
-    - name: Create Graph in Apollo Studio
-      run: |
-        echo "ACTOR: ${{ env.ACTOR }}"
-        curl --request POST 'https://graphql.api.apollographql.com' \
-        --header 'content-type: application/json' \
-        --header 'X-API-Key: ${{ secrets.APOLLO_USER_KEY }}' \
-        --data '{"query":"mutation Mutation($accountId: ID!, $graphType: GraphType!, $hiddenFromUninvitedNonAdmin: Boolean!, $createGraphId: ID!, $title: String!, $variantCreationConfig: VariantCreationConfig) {\n  account(id: $accountId) {\n    createGraph(graphType: $graphType, hiddenFromUninvitedNonAdmin: $hiddenFromUninvitedNonAdmin, id: $createGraphId, title: $title, variantCreationConfig: $variantCreationConfig) {\n      __typename\n      ... on Service {\n        __typename\n        id\n      }\n      ... on GraphCreationError {\n        __typename\n        message\n      }\n    }\n  }\n}","variables":{"accountId":"${{ secrets.APOLLO_ACCOUNT }}","graphType":"SELF_HOSTED_SUPERGRAPH","hiddenFromUninvitedNonAdmin":false,"createGraphId":"${{env.ACTOR}}${{ env.GEN }}","title":"${{github.actor}} - ${{ env.GEN }}","variantCreationConfig":{"variantName":"current","buildConfigInput":{"apiDirectivePassThrough":[],"composition":{"subgraphs":[]}}}}}'
+      - id: string
+        uses: ASzc/change-string-case-action@v5
+        with:
+          string: gh-${{github.actor}}
+      - id: step2
+        run: echo "ACTOR=${{ steps.string.outputs.lowercase }}" | cut -c -23 >> $GITHUB_ENV
+      - name: lowercase github actor
+        run: |
+          curl -L \
+            -X POST \
+            -H "Accept: application/vnd.github+json" \
+            -H "Authorization: Bearer ${{ secrets.GH_KEY }}" \
+            -H "X-GitHub-Api-Version: 2022-11-28" \
+            https://api.github.com/repos/${{github.repository}}/actions/variables \
+            -d '{"name":"actor","value":"${{ env.ACTOR }}" }'
 
-    - name: Override Fed Build Pipeline Track
-      run: |
-        echo "ACTOR: ${{ env.ACTOR }}"
-        curl --request POST 'https://graphql.api.apollographql.com' \
+      - name: Create Graph in Apollo Studio
+        run: |
+          echo "ACTOR: ${{ env.ACTOR }}"
+          curl --request POST 'https://graphql.api.apollographql.com' \
           --header 'content-type: application/json' \
           --header 'X-API-Key: ${{ secrets.APOLLO_USER_KEY }}' \
-          --data '{"query":"mutation DefaultBuildPipelineTrackMutation(\n  $graphId: ID!\n  $buildPipelineTrack: BuildPipelineTrack!\n) {\n  graph(id: $graphId) {\n    defaultBuildPipelineTrack(buildPipelineTrack: $buildPipelineTrack)\n    __typename\n  }\n}", "variables": {"graphId": "${{env.ACTOR}}${{ env.GEN }}", "buildPipelineTrack": "${{ env.FED_PIPELINE }}"}}'
+          --data '{"query":"mutation Mutation($accountId: ID!, $graphType: GraphType!, $hiddenFromUninvitedNonAdmin: Boolean!, $createGraphId: ID!, $title: String!, $variantCreationConfig: VariantCreationConfig) {\n  account(id: $accountId) {\n    createGraph(graphType: $graphType, hiddenFromUninvitedNonAdmin: $hiddenFromUninvitedNonAdmin, id: $createGraphId, title: $title, variantCreationConfig: $variantCreationConfig) {\n      __typename\n      ... on Service {\n        __typename\n        id\n      }\n      ... on GraphCreationError {\n        __typename\n        message\n      }\n    }\n  }\n}","variables":{"accountId":"${{ secrets.APOLLO_ACCOUNT }}","graphType":"SELF_HOSTED_SUPERGRAPH","hiddenFromUninvitedNonAdmin":false,"createGraphId":"${{env.ACTOR}}${{ env.GEN }}","title":"${{github.actor}} - ${{ env.GEN }}","variantCreationConfig":{"variantName":"current","buildConfigInput":{"apiDirectivePassThrough":[],"composition":{"subgraphs":[]}}}}}'
+
+      - name: Override Fed Build Pipeline Track
+        run: |
+          echo "ACTOR: ${{ env.ACTOR }}"
+          curl --request POST 'https://graphql.api.apollographql.com' \
+            --header 'content-type: application/json' \
+            --header 'X-API-Key: ${{ secrets.APOLLO_USER_KEY }}' \
+            --data '{"query":"mutation DefaultBuildPipelineTrackMutation(\n  $graphId: ID!\n  $buildPipelineTrack: BuildPipelineTrack!\n) {\n  graph(id: $graphId) {\n    defaultBuildPipelineTrack(buildPipelineTrack: $buildPipelineTrack)\n    __typename\n  }\n}", "variables": {"graphId": "${{env.ACTOR}}${{ env.GEN }}", "buildPipelineTrack": "${{ env.FED_PIPELINE }}"}}'
 
   keys:
     needs: create
     runs-on: ubuntu-latest
     steps:
-    - name: Sleep
-      run: sleep 10s
-      shell: bash
-    - id: string
-      uses: ASzc/change-string-case-action@v5
-      with:
-        string: gh-${{github.actor}}
-    - id: step2
-      run: echo "ACTOR=${{ steps.string.outputs.lowercase }}" | cut -c -23 >> $GITHUB_ENV
+      - name: Sleep
+        run: sleep 10s
+        shell: bash
+      - id: string
+        uses: ASzc/change-string-case-action@v5
+        with:
+          string: gh-${{github.actor}}
+      - id: step2
+        run: echo "ACTOR=${{ steps.string.outputs.lowercase }}" | cut -c -23 >> $GITHUB_ENV
 
-    - name: Create Apollo Key
-      run: |
-        curl --request POST 'https://graphql.api.apollographql.com' \
-        --header 'content-type: application/json' \
-        --header 'X-API-Key: ${{ secrets.APOLLO_USER_KEY }}' \
-        --data '{"query":"mutation Mutation($graphId: ID!, $keyName: String, $role: UserPermission!) {\n  graph(id: $graphId) {\n    newKey(keyName: $keyName, role: $role) {\n      token\n    }\n  }\n}","variables":{"graphId":"${{env.ACTOR}}${{ env.GEN }}","keyName":"my-first-key","role":"CONTRIBUTOR"}}' -o token.json
-        cat token.json
+      - name: Create Apollo Key
+        run: |
+          curl --request POST 'https://graphql.api.apollographql.com' \
+          --header 'content-type: application/json' \
+          --header 'X-API-Key: ${{ secrets.APOLLO_USER_KEY }}' \
+          --data '{"query":"mutation Mutation($graphId: ID!, $keyName: String, $role: UserPermission!) {\n  graph(id: $graphId) {\n    newKey(keyName: $keyName, role: $role) {\n      token\n    }\n  }\n}","variables":{"graphId":"${{env.ACTOR}}${{ env.GEN }}","keyName":"my-first-key","role":"CONTRIBUTOR"}}' -o token.json
+          cat token.json
 
-    - name: Set Env
-      run: echo "TOKEN=$(cat token.json | jq .data.graph.newKey.token)" >> $GITHUB_ENV
+      - name: Set Env
+        run: echo "TOKEN=$(cat token.json | jq .data.graph.newKey.token)" >> $GITHUB_ENV
 
-    - name: Retrieve Apollo Key
-      run: | 
-        echo "Add code to extract token and save as a github secret"
-        curl -L \
-          -X POST \
-          -H "Accept: application/vnd.github+json" \
-          -H "Authorization: Bearer ${{ secrets.GH_KEY }}" \
-          -H "X-GitHub-Api-Version: 2022-11-28" \
-          https://api.github.com/repos/${{github.repository}}/actions/variables \
-          -d '{"name":"token","value":${{ env.TOKEN }} }'
+      - name: Retrieve Apollo Key
+        run: |
+          echo "Add code to extract token and save as a github secret"
+          curl -L \
+            -X POST \
+            -H "Accept: application/vnd.github+json" \
+            -H "Authorization: Bearer ${{ secrets.GH_KEY }}" \
+            -H "X-GitHub-Api-Version: 2022-11-28" \
+            https://api.github.com/repos/${{github.repository}}/actions/variables \
+            -d '{"name":"token","value":${{ env.TOKEN }} }'
diff --git a/.github/workflows/subgraph-check.yml b/.github/workflows/subgraph-check.yml
index dbf1c01..835c6ae 100644
--- a/.github/workflows/subgraph-check.yml
+++ b/.github/workflows/subgraph-check.yml
@@ -7,31 +7,31 @@ on:
 env:
   GEN: ${{ secrets.GEN || 'ws1' }}
   APOLLO_KEY: ${{ vars.TOKEN }}
-  
+
 jobs:
   checks:
     runs-on: ubuntu-latest
     steps:
       - name: Checkout
         uses: actions/checkout@v3
-  
+
       - name: Install Rover
-        run: | 
-          curl -sSL https://rover.apollo.dev/nix/v0.19.0 | sh
+        run: |
+          curl -sSL https://rover.apollo.dev/nix/v0.27.0-preview.0 | sh
           echo "$HOME/.rover/bin" >> $GITHUB_PATH
-  
+
       - name: Rover Subgraph Check Products
-        run: | 
+        run: |
           rover subgraph check ${{vars.ACTOR}}${{ env.GEN }}@current \
             --name products \
             --schema ./products-schema.graphql
-  
+
       - name: Rover Subgraph Check Orders
-        run: | 
+        run: |
           rover subgraph check ${{vars.ACTOR}}${{ env.GEN }}@current \
             --name orders \
             --schema ./orders-schema.graphql
-  
+
       - name: Rover Subgraph Check Customers
         run: |
           rover subgraph check ${{vars.ACTOR}}${{ env.GEN }}@current \
diff --git a/final/.DS_Store b/final/.DS_Store
index 20b77f0..31d02df 100644
Binary files a/final/.DS_Store and b/final/.DS_Store differ
